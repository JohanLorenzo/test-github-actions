name: GitHub Actions Demo
on: [push]
jobs:
  get_repo_config:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: set_docker_images
        run: echo "::set-output name=docker_images::$(python3 get_docker_hashes.py)"

    outputs:
      docker_images: ${{ steps.set_docker_images.outputs.docker_images }}   # Format: [{"name", "sha256"}]

  build_docker_images:
    needs: get_repo_config
    runs-on: ubuntu-20.04
    container:
      # We need the debug container in order to shell in other commands
      image: gcr.io/kaniko-project/executor:debug

    strategy:
      matrix:
        # Original idea at: https://tomasvotruba.com/blog/2020/11/16/how-to-make-dynamic-matrix-in-github-actions/
        docker_image: ${{ fromJSON(needs.get_repo_config.outputs.docker_images) }}
    steps:
      - uses: actions/checkout@v1
      - name: Create dockerconfig
        run: printf $FORMAT ${{ secrets.DOCKERHUB_CREDENTIALS_BASE64 }} > /kaniko/.docker/config.json
        env:
          FORMAT: '{"auths":{"https://index.docker.io/v1/":{"auth":"%s"}}}'

      # We may want to sue the docker's Github Action, instead https://github.com/docker/build-push-action
      - name: Build and push ${{ matrix.docker_image.name }}-${{ matrix.docker_image.sha256 }}
        # We use --force because kaniko believes it's not running inside a container. That might because we're using
        # the debug image?
        run: /kaniko/executor
          --force
          --dockerfile $GITHUB_WORKSPACE/docker/${{ matrix.docker_image.name }}/Dockerfile
          --destination=johanlorenzo/test-github-action:${{ matrix.docker_image.name }}-${{ matrix.docker_image.sha256 }}
